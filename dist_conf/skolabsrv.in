#!@BASH@

PRGNAME=$(basename $0)

# check if everything is correct
function check() {
	if [ -x "$RCDIR/$SERVICE" ]; then
		case $PARAM in
			start|START)     PARAM="start" && rcrun;;
			stop|STOP)       PARAM="stop" && rcrun;;
			restart|RESTART) PARAM="restart" && rcrun;;
			reload|RELOAD)   PARAM="reload" && rcrun;;
			status|STATUS)   PARAM="status" && rcrun;;
			*) echo "ERROR: Parameter $PARAM not supported!"
		esac
	else
		echo "ERROR $RCDIR/$SERVICE NOT found - abort" >&2
	fi	
}

# starts/stops/restarts... the service
function rcrun() {
	$RCDIR/$SERVICE $PARAM
	retc=$?
	if [ $retc -ne 0 ] && [ $retc -ne 3 ]; then
		( echo "ERROR: $RCDIR/$SERVICE $PARAM failed"
		  echo "Run: $PRGNAME rc all stop"
		  echo "to stop all services"
		) >&2
		exit 1
	fi
}	

# map distribution specific rc script names
function getServiceName() {
	sname=$1
	# Perhaps better use:
	# lsb_release -i | cut -f2
	case $system in
	redhat)
		case $sname in
			apache) SERVICE="httpd" ;;
			openldap) SERVICE="@LDAPD@" ;;
			sasl) SERVICE="saslauthd" ;;
			imapd) SERVICE="cyrus-imapd" ;;
			amavisd) SERVICE="amavisd" ;;
			clamav) SERVICE="clamd.amavisd" ;;
			*) SERVICE=$sname
		esac
		;;

	opensuse)
		case $sname in
			apache) SERVICE="apache2" ;;
			openldap) SERVICE="@LDAPD@" ;;
			sasl) SERVICE="saslauthd" ;;
			imapd) SERVICE="cyrus" ;;
			amavisd) SERVICE="amavis" ;;
			clamav) SERVICE="clamd" ;;
			*) SERVICE=$sname
		esac
		;;
	debian)
		case $sname in
			apache) SERVICE="apache2" ;;
			openldap) SERVICE="@LDAPD@" ;;
			sasl) SERVICE="saslauthd" ;;
			imapd) SERVICE="skolab-cyrus" ;;
			amavisd) SERVICE="amavis" ;;
			clamav) SERVICE="clamav-daemon" ;;
			spamd) SERVICE="spamassassin" ;;
			freshclam) SERVICE="clamav-freshclam" ;;
			*) SERVICE=$sname
		esac
		;;
	mandriva)
		case $sname in
			apache) SERVICE="httpd" ;;
			openldap) SERVICE="@LDAPD@" ;;
			sasl) SERVICE="saslauthd" ;;
			imapd) SERVICE="cyrus-imapd" ;;
			amavisd) SERVICE="amavisd" ;;
			clamav) SERVICE="clamd" ;;
			spamd) SERVICE="spamd" ;;
			freshclam) SERVICE="freshclam" ;;
			*) SERVICE=$sname
		esac
		;;
	esac
}	

# Copied from the script /etc/init.d/vboxadd from Virtualbox
# That script has more nice code, for e.g. displaying the result of
# executed commands.
if [ -f /etc/arch-release ]; then
	system=arch
elif [ -f /etc/redhat-release ]; then
	system=redhat
elif [ -f /etc/SuSE-release ]; then
	system=opensuse
elif [ -f /etc/gentoo-release ]; then
	system=gentoo
elif [ -e /etc/debian_version ]; then
	system=debian
elif [ -f /etc/mandriva-release ]; then
	system=mandriva
elif [ -f /etc/lfs-release -a -d /etc/rc.d/init.d ]; then
	system=lfs
else
	system=other
fi

# Some distributions run / control the services clamav and freshclam from
# amavisd.  The services can be unset in @sysconfdir@/skolab/profile.sh,
# when unset, they are not called obviously. 
CLAMAV=clamav
FRESHCLAM=freshclam

[[ -f /etc/skolab/profile.sh ]] && . /etc/skolab/profile.sh

# variables
RC=$1
SERVICE=$2
PARAM=$3

# Use the service name as defined in the openpkg environment
# Skolab installations on native distributions, should adapt service names
# with the function getServiceName
#
# The order in which the services get started in openSUSE is as follows:
# S08ldap
# S08saslauthd
# S08clamd
# S10amavis
# S10cyrus
# S11postfix
# S12apache2
# S13skolabd
# S13freshclam
# 
# In earlier days, spamd was part of the services as well.  But as
# spamassassin is used as library for amavisd, it is not needed to run it
# as a seperate service.  More information about this topic can be found
# at https://issues.kolab.org/issue3953
SERVICES="openldap sasl $CLAMAV amavisd imapd postfix apache"
SERVICES="$SERVICES skolabd $FRESHCLAM"

case $RC in 
rc)
	# okay
	;;
*list)
	# Provide an alphanumerical list of services.
	for S in $SERVICES; do
		getServiceName $S
		DIST_SERVICES="$DIST_SERVICES $SERVICE"
	done
	case $RC in
	alphalist)
		echo $DIST_SERVICES | tr " " "\n" | sort | tr "\n" " "
		echo
		;;
	*)
		echo $DIST_SERVICES
		;;
	esac
	exit
	;;
status)
	for S in $SERVICES; do
		getServiceName $S
		case $S in
		amavisd|clamav|freshclam|spamd)
			DEFENSIVE_SERVICES="$DEFENSIVE_SERVICES $SERVICE"
			;;
		*)
			GROUPWARE_SERVICES="$GROUPWARE_SERVICES $SERVICE"
			;;
		esac
	done

	echo "Groupware services:"
	echo "-------------------"
	chkconfig --list $(tr " " "\n" <<< $GROUPWARE_SERVICES | sort)
	echo "All the above listed groupware services must be active."
	echo

	echo "Defensive services:"
	echo "-------------------"
	chkconfig --list $(tr " " "\n" <<< $DEFENSIVE_SERVICES | sort)

	if [[ "$ENABLE_VIRUS_SCAN" == "no" ]]; then
		echo "SPAM detection and virus scanning are disabled."
		echo "Hence the above listed defensive services do not need to be active."
	else
		echo "SPAM detection and virus scanning are enabled."
		echo "The above listed defensive services must be active."
	fi
	exit
	;;
*)
	SERVICES=$(echo $SERVICES | tr -s " " | sed 's, ,|,'g)

	( [[ -n "$RC" ]] && echo "ERROR: $RC not supported"
	  echo "Use: $PRGNAME rc [all|$SERVICES] [stop|start|restart|status]"
	  echo
	  echo "Obtain a list of all skolab related processes;"
	  echo "- in execution order:"
	  echo "  $PRGNAME list"
	  echo
	  echo "- in alphabetical order:"
	  echo "  $PRGNAME alphalist"
	  echo
	  echo "Display the state of the all skolab related processes:"
	  echo "  $PRGNAME status"
	) >&2

	exit 1
	;;
esac

if [[ "$SERVICE" != "all" ]]; then

	SERVICE_FOUND=no

	for S in $SERVICES; do
		if [[ $S == "$SERVICE" ]]; then
			SERVICE_FOUND=yes
			SERVICES=$SERVICE
			break
		fi
	done

	if [[ $SERVICE_FOUND == "no" ]]; then
		( echo "ERROR: unknown service: $SERVICE"
		  echo "Use: $PRGNAME rc [all|$SERVICES] [stop|start|restart|status]"
		) >&2

		exit 1
	fi
else
	if [[ "$PARAM" == "stop" ]]; then
		SERVICES=$(tr " " "\n" <<< "$SERVICES" | tac)
	fi
fi

RCDIR=@skolab_rcdir@

for SERVICE in $SERVICES; do
	# Only start the virus scanning dependent services in case
	# virus scanning has been enabled on the skolab web admin interface.
	# An service is always stopped independent of the virus service
	# scanning setting.
	if [[ "$PARAM" == "start" ]] || [[ "$PARAM" == "restart" ]]; then
		case $SERVICE in
		amavisd|clamav|freshclam|spamd)
			if [[ "$ENABLE_VIRUS_SCAN" == "no" ]]; then
				RUN_SERVICE=no
			else
				RUN_SERVICE=yes
			fi
			;;
		*)
			RUN_SERVICE=yes
			;;
		esac
	else
		RUN_SERVICE=yes
	fi

	[[ $RUN_SERVICE == "yes" ]] && {
		getServiceName $SERVICE
		check $SERVICE
	}
done

